{"version":3,"sources":["components/Navigation.js","components/Search.js","routes/Home.js","fbase.js","components/group/StudyGroupList.js","routes/StudyGroup.js","routes/ContestGroup.js","routes/Profile.js","components/group/StudyGroupForm.js","components/roadmap/Sample.js","components/group/G_HS.js","components/auth/AuthForm.js","routes/Auth.js","components/Router.js","components/App.js","index.js"],"names":["Navigation","to","Search","type","placeholder","value","onClick","event","preventDefault","Home","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","StudyGroupList","useState","groups","setGroup","getGroup","a","collection","get","forEach","document","groupObject","data","id","prev","useEffect","map","group","info","group_name","group_type","group_lecture","group_numOfMembers","group_goal","group_plane","group_qualification","StudyGroup","userObj","ContestGroup","Profile","StudyGroupForm","studyGroup","setStudyGroup","lectures","elements","lecture","name","onSubmit","add","createdAt","Date","now","creatorId","onChange","e","console","log","target","method","for","options","index","length","option","push","mkOptions","Sample","buttons","button","mkButton","Table","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","required","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","AppRouter","path","exact","component","App","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5ac7aa94.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { HashRouter as Router, Link } from \"react-router-dom\";\r\n\r\n\r\n//메뉴\r\nconst Navigation = () => {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <ul>\r\n          <li><Link to=\"/components/roadmap/Sample\">로드맵</Link></li>\r\n          <li><Link to=\"/studygroup\">스터디/튜터링</Link></li>\r\n          <li><Link to=\"/contestgroup\">공모전/대회</Link></li>\r\n          <li><Link to=\"/profile\">마이페이지</Link></li>\r\n          <li><Link to=\"/sample_form\">스터디그룹 폼</Link></li>\r\n          <li><Link to=\"/login\">로그인</Link></li>\r\n        </ul>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\nexport default Navigation;","import React from \"react\";\r\n\r\nconst Search = () => {\r\n  const onClick = (event) => {\r\n    event.preventDefault();\r\n  }\r\n  return (\r\n    <form>\r\n      <input type=\"text\" placeholder=\"키워드\" />\r\n      <input type=\"submit\" value=\"검색\" onClick={onClick}/>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport Navigation from \"components/Navigation\"\r\nimport Search from \"components/Search\";\r\n//import { dbService } from \"fbase\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Search />\r\n      <Navigation />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;","import firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\n\r\nconst StudyGroupList = () => {\r\n  const [groups, setGroup] = useState([]);\r\n  const getGroup = async () => {\r\n    const dbGroup = await dbService.collection(\"groups\").get();\r\n    dbGroup.forEach((document) => {\r\n      const groupObject = {\r\n        ...document.data(),\r\n        id: document.id,\r\n      };\r\n      setGroup((prev) => [groupObject, ...prev]);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getGroup();\r\n    /*dbService.collection(\"groups\").onSnapshot((snapshot) => {\r\n      const groupArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setGroups(groupArray);\r\n    });*/\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {groups.map((group) => (\r\n        <fieldset key={group.id}>\r\n          <legend>{group.info.group_name}</legend>\r\n          <ul>\r\n            <li>그룹속성: {group.info.group_type}</li>\r\n            <li>강좌명: {group.info.group_lecture}</li>\r\n            <li>모집인원: {group.info.group_numOfMembers}</li>\r\n            <li>그룹 목표: {group.info.group_goal}</li>\r\n            <li>학업계획: {group.info.group_plane}</li>\r\n            <li>자격요건: {group.info.group_qualification}</li>\r\n          </ul>\r\n        </fieldset>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StudyGroupList;","import React from \"react\";\r\nimport StudyGroupList from \"components/group/StudyGroupList\"\r\n\r\nconst StudyGroup = ({userObj}) => {\r\n  return (<StudyGroupList userObj={userObj} />);\r\n}\r\n\r\nexport default StudyGroup;","import React from \"react\";\r\n//해수 입니다\r\n\r\nconst ContestGroup = () => {\r\n  return (<h1>ContestGroup</h1>);\r\n}\r\n\r\nexport default ContestGroup;","import React from \"react\";\r\n\r\nconst Profile = () => {\r\n  return (<h1>Profile</h1>);\r\n}\r\n\r\nexport default Profile;","import React, { useState, useEffect } from \"react\";\r\nimport { elements } from \"components/roadmap/lectures\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { dbService } from \"fbase\";\r\n//그룹 폼 텍스트 데이터를 DB에 저장 DB에서 특정 데이터를 반환 하는 것 구현\r\n\r\nconst StudyGroupForm = ({userObj}) => {\r\n  const [studyGroup, setStudyGroup] = useState({\r\n    group_name: '미등록',\r\n    group_lecture: '미등록',\r\n    group_type: '미등록',\r\n    group_numOfMembers: '0',\r\n    group_goal: '미등록',\r\n    group_plane: '미등록',\r\n    group_qualification: '미등록'\r\n  });\r\n  /*studyGroup.propTypes = {\r\n    group_name: PropTypes.string.isRequired,\r\n    group_lecture: PropTypes.string.isRequired,\r\n    group_type: PropTypes.string.isRequired,\r\n    group_numOfMembers: PropTypes.number.isRequired,\r\n    group_goal: PropTypes.string.isRequired,\r\n    group_plane: PropTypes.string.isRequired,\r\n    group_qualification: PropTypes.string\r\n  }*/\r\n\r\n  const lectures = elements.map((lecture) => (lecture.name));\r\n  const mkOptions = (lectures) => {\r\n    const options = [];\r\n    for (let index = 0; index < lectures.length; index++) {\r\n      const option = <option value={lectures[index]}>{lectures[index]}</option>;\r\n      options.push(option);\r\n    }\r\n    return (options)\r\n  }\r\n\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.collection(\"groups\").add({ \r\n      info: studyGroup,\r\n      createdAt: Date.now(),\r\n      creatorId: \"null\"/*userObj.uid*/\r\n    });\r\n    setStudyGroup(\"\");\r\n  };\r\n\r\n\r\n\r\n\r\n  const onChange = e => {\r\n    console.log(e.target.name);\r\n    setStudyGroup({\r\n      ...studyGroup,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  console.log(lectures);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <form id='groupMake' onSubmit={onSubmit} method=\"post\">\r\n          <div >\r\n            <label id='그룹속성' for=\"group_type\">그룹 속성</label>\r\n            <select name=\"group_type\" id=\"group_type\" onChange={onChange}>\r\n              <option value=\"study\" >스터디</option>\r\n              <option value=\"tutoring\">튜터링</option>\r\n            </select>\r\n          </div>\r\n         \r\n          <div>\r\n            <label id='강좌명' for=\"group_lecture\">강좌명</label>\r\n            <select name=\"group_lecture\" id=\"group_lecture\" onChange={onChange}>\r\n              {mkOptions(lectures)}\r\n            </select>\r\n            \r\n            <div>\r\n              <label for=\"group_name\">그룹명</label>\r\n              <input type=\"text\" id=\"group_name\" name=\"group_name\" onChange={onChange} />\r\n            </div>\r\n            <div>\r\n              <label for=\"group_numOfMembers\">인원수</label>\r\n              <input type=\"text\" id=\"group_numOfMembers\" name=\"group_numOfMembers\" onChange={onChange} />\r\n            </div>\r\n            <div>\r\n              <label for=\"group_goal\">그룹 목표</label>\r\n              <input type=\"text\" id=\"group_goal\" name=\"group_goal\" onChange={onChange} />\r\n            </div>\r\n            <div>\r\n              <label for=\"group_plane\">학업계획</label>\r\n              <input type=\"text\" id=\"group_plane\" name=\"group_plane\" onChange={onChange} />\r\n            </div>\r\n            \r\n\r\n            <div>\r\n\r\n            </div>\r\n            <label for=\"group_qualification\">자격 요건</label>\r\n            <input type=\"text\" id=\"group_qualification\" name=\"group_qualification\" onChange={onChange} />\r\n          </div>\r\n          <input id=\"제출\" type=\"submit\" />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default StudyGroupForm;","// 노마드 nwitt 파일 수정 중 --\r\n//import { dbService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { HashRouter as Router, Link } from \"react-router-dom\";\r\nimport { elements } from \"components/roadmap/lectures\"\r\n\r\n\r\n// 튜터링 모여있는 테이블 만들기 --> 전공 필수, 전공 선택 강좌 31개 DT만 \r\n\r\n\r\n// 알고리즘 선택 시 알고리즘 튜터링 모여있는 페이지 따로만들어? ㄴㄴ 빈 페이지에 강좌명==버튼이름인 모임만 나오게\r\n\r\n\r\nconst Sample = () => {\r\n   const lectures = elements.map((lecture) => (lecture.name));\r\n   const mkButton = (lectures) => {\r\n      const buttons = [];\r\n      for (let index = 0; index < lectures.length; index++) {\r\n        const button = <Link to=\"/components/group/G_HS\"><button>{lectures[index]}</button></Link>;\r\n        buttons.push(button);\r\n      }\r\n\r\n      return (buttons)\r\n    }\r\n   return(\r\n      <>\r\n      <h2 id ='전공타이틀'>DB전공</h2>\r\n      <div id='DB전공'>\r\n      <Router>\r\n         {mkButton(lectures)}\r\n      </Router>\r\n      {/*<Router>\r\n         <Link to=\"/components/group/G_HS\"></Link>\r\n         <button id =\"전필\"><Link to=\"/components/group/G_HS\">{lectures.elements[1].name}</Link></button> \r\n         <button id =\"전필\"><Link to=\"/components/group/G_HS\">기초프로그래밍2</Link></button> \r\n         <button id =\"전필\"><Link to=\"/components/group/G_HS\">자료구조</Link></button> \r\n         <button id =\"전필\"><Link to=\"/components/group/G_HS\">R통계분석</Link></button> \r\n         <button id =\"전필\"><Link to=\"/components/group/G_HS\">알고리즘</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">통계적데이터분석</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">기초웹프로그래</Link></button> \r\n         <button id =\"전필\"><Link to=\"/components/group/G_HS\">운영체제</Link></button> \r\n         <button id =\"전필\"><Link to=\"/components/group/G_HS\">소프트웨어공학</Link></button> \r\n         <button id =\"전필\"><Link to=\"/components/group/G_HS\">인공지능</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">고급웹프로그래밍</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">컴퓨터아키텍</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">UX디자인</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">소프트위어인턴쉽</Link></button> \r\n         <button id =\"전필\"><Link to=\"/components/group/G_HS\">데이터베이스</Link></button> \r\n         <button id =\"전필\"><Link to=\"/components/group/G_HS\">빅데이터프로그래밍</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">자기주도학습(2)</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">소프트웨어세미나(1)</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">컴퓨터통신</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">게임프로그래밍</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">캠스톤디자인</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">딥러닝</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">데이터베이스프로젝트</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">모바일컴퓨팅</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">빅데이터기술특론1</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">현장실무교육</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">캠스톤디자인2</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">데이터사이언스</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">블록체인기초</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">클라우드시스템</Link></button> \r\n         <button id =\"DB\"><Link to=\"/components/group/G_HS\">빅데이터기술특론2</Link></button> \r\n        \r\n         <button id='그룹생성'><Link to=\"/sample_form\">그룹 생성</Link></button>\r\n      </Router>*/}\r\n      </div>\r\n      </>\r\n   );\r\n   //<button onClick={onMakeCLick}>그룹 생성</button>\r\n  /* return(\r\n   <Router>\r\n        <ul>\r\n       <Link to=\"/components/group/Sample\">그룹 생성</Link>\r\n        </ul>\r\n   </Router>);*/\r\n};\r\n\r\n// 링크 ㄴㅁ어가는거 봤으니까 스터디 그룹 폼을 DB에 저장 DB에서 특정 데이터를 반환 하는 것 구현\r\n\r\n\r\nexport default Sample;","import React from \"react\";\r\nimport { HashRouter as Router, Link } from \"react-router-dom\";\r\n\r\nconst Table = () => {\r\n  return(\r\n    <Router>  \r\n      <button id=\"basic\">A모임 기본 정보 출력</button> \r\n      <button id=\"basic\">B모임 기본 정보 출력</button>\r\n      <button id=\"basic\">C모임 기본 정보 출력</button>\r\n    </Router>);\r\n};\r\n/*\r\n<form name=\"testForm\" id=\"testForm\">\r\n    <input type=\"text\" name=\"name\" id=\"name\" value=\"홍길동\" />\r\n    <input type=\"text\" name=\"id\" id=\"id\" value=\"1234567\" />\r\n</form>\r\n\r\n\r\n    function to_ajax(){\r\n  \r\n \r\n      var queryString = $(\"form[name=testForm]\").serialize() ;\r\n\r\n      $.ajax({\r\n          type : 'post',\r\n          url : '/test.jsp',\r\n          data : queryString,\r\n          dataType : 'json',\r\n          error: function(xhr, status, error){\r\n              alert(error);\r\n          }\r\n          ,success : function(json){\r\n              alert(json)\r\n          },\r\n      });\r\n\r\n  }\r\n*/\r\n\r\nexport default Table;","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst inputStyles = {};\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          className=\"authInput\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;","import React from \"react\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/auth/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Navigation from \"components/Navigation\"\r\nimport Home from \"routes/Home\";\r\n//import Roadmap from \"routes/Roadmap\";\r\nimport StudyGroup from \"routes/StudyGroup\";\r\nimport ContestGroup from \"routes/ContestGroup\";\r\nimport Profile from \"routes/Profile\";\r\nimport StudyGroupForm from \"components/group/StudyGroupForm\";\r\nimport Sample from \"components/roadmap/Sample\";\r\nimport Table from \"components/group/G_HS\";\r\nimport Auth from \"routes/Auth\"\r\n\r\n\r\n//경로\r\nconst AppRouter = ({userObj}) => {\r\n  return (\r\n    <Router>\r\n      <Navigation />\r\n      <Route path=\"/\" exact={true} component={Home}>Home</Route>\r\n      <Route path=\"/components/roadmap/Sample\" exact={true} component={Sample}></Route>\r\n      <Route path=\"/components/group/G_HS\" exact={true} component={Table}></Route>\r\n      <Route path=\"/studygroup\" exact={true}><StudyGroup userObj={userObj}/></Route>\r\n      <Route path=\"/contestgroup\" exact={true} component={ContestGroup}></Route>\r\n      <Route path=\"/profile\" exact={true} component={Profile}></Route>\r\n      <Route path=\"/sample_form\" exact={true} component={StudyGroupForm}></Route>\r\n      <Route path=\"/login\" exact={true} component={Auth}></Route>\r\n    </Router>\r\n  );\r\n}\r\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);  \r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setIsLoggedIn(true);\r\n        setUserObj(user);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  return (<AppRouter userObj={userObj} />);\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport React from 'react';\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}